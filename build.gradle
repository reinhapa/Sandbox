plugins {
  id 'java-library'
  id 'war'
  id 'eclipse-wtp'
  id 'com.google.osdetector' version '1.6.0'
}

group = 'net.reini'
version = '0.0.1-SNAPSHOT'
description = "Sandbox project for pure testing purposes"
ext.platform = osdetector.os == 'osx' ? 'mac' : osdetector.os == 'windows' ? 'win' : osdetector.os

sourceCompatibility = '11'
targetCompatibility = '11'

repositories {
    jcenter()
    mavenLocal()
}

dependencies {
    implementation 'com.airhacks:afterburner.fx:1.+'
    implementation 'com.github.sarxos:webcam-capture:0.+'
    implementation 'com.google.zxing:core:3.+'
    implementation 'com.google.zxing:javase:3.+'
    implementation 'javax.cache:cache-api:1.+'
    implementation 'net.sf.ehcache:ehcache:2.+'
    implementation 'org.ehcache:ehcache:3.+'
    implementation 'org.eclipse.jgit:org.eclipse.jgit:4.+'
    implementation 'org.glassfish.jersey.core:jersey-client:2+'

    // javaFX
    compileOnly "org.openjfx:javafx-base:11:$platform"
    compileOnly "org.openjfx:javafx-graphics:11:$platform"
    compileOnly "org.openjfx:javafx-fxml:11:$platform"
    compileOnly "org.openjfx:javafx-controls:11:$platform"
    
    compileOnly 'javax:javaee-api:8.0'
    // websocket
    compileOnly 'javax.websocket:javax.websocket-client-api:1.1'
    runtimeOnly 'org.glassfish.tyrus.bundles:tyrus-standalone-client:1.12'

    testImplementation 'easymock:easymock:2.+'
    testImplementation 'org.mockito:mockito-core:2.+'
    testImplementation 'org.mockito:mockito-junit-jupiter:2.+'
    testImplementation 'org.jmockit:jmockit:1.23'
    testImplementation 'junit:junit:4.+'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.+'
    testImplementation 'org.junit.jupiter:junit-jupiter-migrationsupport:5.+'

    testImplementation 'javax.websocket:javax.websocket-client-api:1.1'

    testRuntimeOnly 'org.junit.platform:junit-platform-runner:1.+'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.+'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.+'
    testRuntimeOnly 'ch.qos.logback:logback-classic:1.+'
}

compileJava {
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
                '--add-modules', 'javafx.controls,javafx.fxml'
        ]
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events 'started', 'passed'
    }
}